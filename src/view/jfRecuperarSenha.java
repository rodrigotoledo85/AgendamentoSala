/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import connection.ConnectionFactory;
import static connection.ConnectionFactory.getConnection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import model.bean.Usuario;
import model.dao.UsuarioDAO;
import org.apache.commons.mail.EmailException;
import org.apache.commons.mail.SimpleEmail;

/**
 *
 * @author rodrigo
 */
public class jfRecuperarSenha extends javax.swing.JFrame {

    Usuario objUsuario;
    UsuarioDAO DAO;
    String user = "";
    String pass = "";

    public jfRecuperarSenha() {
        initComponents();
        try {
            objUsuario = new Usuario();
            DAO = new UsuarioDAO();
        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlEmail = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtDesEmail = new javax.swing.JTextField();
        jbEnviar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Recuperar Senha");
        setResizable(false);

        jlEmail.setText("E-mail :");

        jLabel2.setText("Informe o e-mail cadastrado de seu usuário!");

        jbEnviar.setText("Enviar");
        jbEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEnviarActionPerformed(evt);
            }
        });

        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbEnviar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbCancelar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlEmail)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtDesEmail)))
                .addGap(60, 60, 60))
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jLabel2)
                .addContainerGap(69, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jlEmail)
                    .addComponent(jtDesEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbEnviar)
                    .addComponent(jbCancelar))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEnviarActionPerformed
        if (validarCampos()) {
            if (preencherCampos()) {
                try {
                    sendEmail();
                    JOptionPane.showMessageDialog(this, "Seu usuário e senha foi enviado para sua conta de e-mail cadastrada!");
                    new jfLogin().setVisible(true);
                    this.dispose();
                } catch (EmailException ex) {
                    JOptionPane.showMessageDialog(this, "Erro: " + ex.getMessage());
                }
            }

        }

    }//GEN-LAST:event_jbEnviarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        new jfLogin().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jbCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jfRecuperarSenha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jfRecuperarSenha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jfRecuperarSenha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jfRecuperarSenha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jfRecuperarSenha().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbEnviar;
    private javax.swing.JLabel jlEmail;
    private javax.swing.JTextField jtDesEmail;
    // End of variables declaration//GEN-END:variables

    public boolean preencherCampos() {

        objUsuario.setDesEmail(jtDesEmail.getText());
        return true;
    }

    public boolean validarCampos() {
        if (jtDesEmail.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Digite o e-mail cadastrado!");
            jtDesEmail.requestFocus();
            return false;
        }
        return true;
    }

    public void limparCampos() {
        jtDesEmail.setText("");
    }

//    public boolean alterarSenha(Usuario objUsuario) throws Exception {
//
//        String sql = "UPDATE tbl_usuario SET des_senha = 123456 WHERE des_email = ?";
//        PreparedStatement stmt = getConnection().prepareStatement(sql);
//
//        stmt.setString(1, jtDesEmail.getText());
//
//        if (stmt.executeUpdate() > 0) {
//            return true;
//        } else {
//            return false;
//        }
//    }
    
    public void sendEmail() throws EmailException {
        String emailInfo = "";
        emailInfo = jtDesEmail.getText();
        ConnectionFactory.getConnection();
        String sql = "SELECT des_login, des_senha FROM agendamento_sala.tbl_usuario where des_email = ?";
        try {
            PreparedStatement stmt = getConnection().prepareStatement(sql); 
            stmt.setString(1, emailInfo);
            ResultSet rs = stmt.executeQuery();
           
            while (rs.next()) {
            objUsuario.setDesLogin(rs.getString("des_login"));
            objUsuario.setDesSenha(rs.getString("des_senha"));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro: " + ex);
        } finally {
            //ConnectionFactory.closeConnection(con);
        }
        
        SimpleEmail email = new SimpleEmail();
        //Utilize o hostname do seu provedor de email
        System.out.println("alterando hostname...");
        email.setHostName("smtp.gmail.com");
        //Quando a porta utilizada não é a padrão (gmail = 465)
        email.setSmtpPort(465);
        //Adicione os destinatários
        String endereco = "";
        endereco = jtDesEmail.getText();
        email.addTo(endereco, "EEDECP");
        //Configure o seu email do qual enviará
        email.setFrom("eedecp.sistema@gmail.com", "EEDECP");
        //Adicione um assunto
        email.setSubject("Recuperação de senha para acesso ao Sistema de Agendamento de Sala.");
        //Adicione a mensagem do email
        email.setMsg("Segue abaixo seu usuário e senha de acesso ao Sistema de Agendamento de Salas.\nUsuário: " + objUsuario.getDesLogin() + "\nSenha:  " + objUsuario.getDesSenha() + "\n\nFavor não responder este e-mail.");
        //Para autenticar no servidor é necessário chamar os dois métodos abaixo
        System.out.println("autenticando...");
        email.setSSL(true);
        email.setAuthentication("eedecp.sistema@gmail.com", "eedecp123");
        System.out.println("enviando...");
        email.send();
        System.out.println("Email enviado!");
    }
}

   
